


`
    <div class="custom-select-container custom-select" id="paymentSelect">
        <div class="custom-select-trigger">Select payment type</div>
        <div class="custom-options" id="paymentList">
            <input type="text" placeholder="Type to filter...">
            <div class="custom-option" data-value="ach">Direct Deposit / ACH</div>
            <div class="custom-option" data-value="check">Check</div>
            <div class="custom-option" data-value="cash">Cash</div>
            <div class="custom-option" data-value="moneyOrder">Money Order</div>
            <div class="custom-option" data-value="subsidized">Subsidized</div>
            <div class="custom-option" data-value="cashiersCheck">Cashier's Check</div>
            <div class="custom-option" data-value="other">Other</div>
        </div>
    </div>

`

// data-value is the gl account id


function addCustomSelect(containerId, onSelectCallback = () => { }) {
    const container = document.getElementById(containerId);
    if (!container) return;

    const selectTrigger = container.querySelector('.custom-select-trigger');
    const optionsWrapper = container.querySelector('.custom-options');
    const filterInput = container.querySelector('input[type="text"]');
    const options = container.querySelectorAll('.custom-option');

    selectTrigger.addEventListener('click', function () {
        const isVisible = optionsWrapper.style.display === 'block';
        optionsWrapper.style.display = isVisible ? 'none' : 'block';
        filterInput.value = '';
        filterInput.focus();
        filterOptions(options, '');
    });

    options.forEach(option => {
        option.addEventListener('click', function () {
            selectTrigger.textContent = this.textContent;
            selectTrigger.dataset.value = this.dataset.value;
            optionsWrapper.style.display = 'none';

            // Custom callback when an option is selected
            onSelectCallback(this.dataset.value, this.textContent);
        });
    });

    filterInput.addEventListener('input', function () {
        filterOptions(options, this.value);
    });

    // Close dropdown if click is outside
    document.addEventListener('click', function (event) {
        if (!container.contains(event.target)) {
            optionsWrapper.style.display = 'none';
        }
    });
}

function filterOptions(options, query) {
    options.forEach(option => {
        if (option.textContent.toLowerCase().includes(query.toLowerCase())) {
            option.classList.remove('hidden');
        } else {
            option.classList.add('hidden');
        }
    });
}
